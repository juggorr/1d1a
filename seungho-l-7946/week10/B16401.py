# BAEKJOON 16401 - 과자 나눠주기 (S2)

'''
문제
1) 조카들이 과자를 먹는 동안은 떼를 쓰지 않기 때문에, 홍익이는 조카들에게 최대한 긴 과자를 나눠줌
2) 나눠준 과자의 길이가 하나라도 다르면 조카끼리 싸움이 일어난다. 따라서 반드시 모든 조카에게 같은 길이의 막대 과자
3) M명의 조카가 있고 N개의 과자가 있을 때, 조카 1명에게 줄 수 있는 막대 과자의 최대 길이
4) 막대 과자는 길이와 상관없이 여러 조각으로 나눠질 수 있지만, 과자를 하나로 합칠 수는 없다. 단, 막대 과자의 길이는 양의 정수

풀이
1) 처음에는 과자를 반으로 나눴는데, 왠지 모를 엣지 케이스가 발생했음
2) 걍 해당 길이의 과자에 카운팅을 늘리는 방식으로 변경

입력
1) 첫째 줄에 조카의 수 M (1 ≤ M ≤ 1,000,000), 과자의 수 N (1 ≤ N ≤ 1,000,000)
2) 둘째 줄에 과자 N개의 길이 L1, L2, ..., LN이 공백으로 구분

출력
1) 첫째 줄에 조카 1명에게 줄 수 있는 막대 과자의 최대 길이를 출력
2) 단, 모든 조카에게 같은 길이의 막대과자를 나눠줄 수 없다면, 0을 출력
'''

import sys

sys.stdin = open('B16401.txt')

# input
M, N = map(int, input().split())
snacks = list(map(int, input().split()))

# 좌우값 설정
lt = 0
rt = max(snacks)

# 종료조건 설정
while lt <= rt:

    # 미드
    mid = (lt + rt) // 2

    # 미드값 0 되면 종료
    if not mid:
        result = 0
        break

    cnt = 0

    # 까까 길이 순회
    # 미드보다 길 경우, 해당 길이로 만들 수 있는 과자의 수만큼 추가
    for snack in snacks:
        if snack >= mid:
            cnt += (snack // mid)

    # 초기화 조건
    if cnt >= M:
        lt = mid + 1
        result = mid
    else:
        rt = mid - 1

# output
print(result)