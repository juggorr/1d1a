# 한국도로공사는 고속도로의 유비쿼터스화를 위해 고속도로 위에 N개의 센서를 설치하였다. 
# 문제는 이 센서들이 수집한 자료들을 모으고 분석할 몇 개의 집중국을 세우는 일인데, 
# 예산상의 문제로, 고속도로 위에 최대 K개의 집중국을 세울 수 있다고 한다.
# N개의 센서가 적어도 하나의 집중국과는 통신이 가능해야 하며
# 집중국의 유지비 문제로 인해 각 집중국의 수신 가능 영역의 길이의 합을 최소화해야 한다

# N개의 센서
N = int(input())
# 최대 K개의 집중국
K = int(input())
# 센서들은 이 직선 위의 한 기점인 원점으로부터의 정수 거리의 위치에 놓여 있다
# 센서의 좌표들
sensor = list(map(int, input().split()))

## K > N일때 예외처리 (K > N 일 때는 무조건 1이다)
# 집중국의 수신 가능 영역 길이 0 이상이므로 
if K >= N :
    print(0)
else: 
    sensor.sort()
    # [1, 3, 6, 6, 7, 9]
    # 거리를 기록할 리스트
    gap = []
    # 각 구간의 거리를 담은 배열
    for i in range(len(sensor)-1):
        gap.append(sensor[i+1] - sensor[i])
    # [2, 3, 0, 1, 2]
    # 다 담고 나서 오름차순 정렬
    gap.sort()
    # [0, 1, 2, 2, 3]

    # 거리가 긴 구간 부터 잘라준다.
    # 해당 구간을 없애버리면 잘라진거다.
    for i in range(K-1):
        gap.pop()
    # K = 2
    # [0, 1, 2 / 2]

    print(sum(gap))
    # 5